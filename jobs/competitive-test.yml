parameters:
- name: cloud
  type: string
- name: regions
  type: object
- name: topology
  type: string
- name: engine
  type: string
- name: engine_input
  type: object
  default: {}
- name: matrix
  type: object
  default: {}
- name: max_parallel
  type: number
- name: terraform_modules_dir
  type: string
  default: ''
- name: terraform_input_file_mapping
  type: object
  default: []
- name: terraform_arguments
  type: string
  default: ''
- name: terraform_input_varibles
  type: object
  default: {}
- name: test_modules_dir
  type: string
  default: ''
- name: run_id
  type: string
  default: ''
- name: base_run_id
  type: string
  default: ''
- name: timeout_in_minutes
  type: number
  default: 60 # default when not specified is 60 minutes
- name: retry_attempt_count
  type: number
  default: 3
- name: credential_type
  type: string
  default: managed_identity
  values:
  - managed_identity
  - service_connection
- name: ssh_key_enabled
  type: boolean
  default: true

jobs:
- job: ${{ parameters.cloud }}
  strategy:
    maxParallel: ${{ parameters.max_parallel }}
    matrix:
      ${{ parameters.matrix }}
  timeoutInMinutes: ${{ parameters.timeout_in_minutes }}
  steps:
  - script: |
      echo "DEBUG: base_run_id parameter: '${{ parameters.base_run_id }}'"
      if [ -n "${{ parameters.base_run_id }}" ]; then
        base_run_id="${{ parameters.base_run_id }}"
        echo "Using provided base_run_id: $base_run_id"
      else
        # Fallback to generating timestamp if base_run_id is not provided
        base_run_id=$(date +%m%d%H%M%S)
        echo "Generated fallback base_run_id: $base_run_id"
      fi
      
      job_suffix=$(echo "$(System.JobId)" | cut -c1-5)
      final_run_id="${base_run_id}-${job_suffix}"
      echo "Job suffix: $job_suffix" 
      echo "Final run ID: $final_run_id"
      echo "##vso[task.setvariable variable=GENERATED_RUN_ID]$final_run_id"
    displayName: "Generate Run ID"
  - template: /steps/setup-tests.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      region: ${{ parameters.regions[0] }}
      run_id: $(GENERATED_RUN_ID)
      test_modules_dir: ${{ parameters.test_modules_dir }}
      retry_attempt_count: ${{ parameters.retry_attempt_count }}
      credential_type: ${{ parameters.credential_type }}
      ssh_key_enabled: ${{ parameters.ssh_key_enabled }}
  - template: /steps/provision-resources.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      regions: ${{ parameters.regions }}
      terraform_modules_dir: ${{ parameters.terraform_modules_dir }}
      terraform_input_file_mapping: ${{ parameters.terraform_input_file_mapping }}
      terraform_arguments: ${{ parameters.terraform_arguments }}
      terraform_input_varibles: ${{ parameters.terraform_input_varibles }}
      retry_attempt_count: ${{ parameters.retry_attempt_count }}
      credential_type: ${{ parameters.credential_type }}
  - template: /steps/validate-resources.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      regions: ${{ parameters.regions }}
      topology: ${{ parameters.topology }}
      engine: ${{ parameters.engine }}
  - template: /steps/execute-tests.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      topology: ${{ parameters.topology }}
      engine: ${{ parameters.engine }}
      regions: ${{ parameters.regions }}
      engine_input: ${{ parameters.engine_input }}
  - template: /steps/publish-results.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      topology: ${{ parameters.topology }}
      engine: ${{ parameters.engine }}
      regions: ${{ parameters.regions }}
      engine_input: ${{ parameters.engine_input }}
      credential_type: ${{ parameters.credential_type }}
  - template: /steps/cleanup-resources.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      regions: ${{ parameters.regions }}
      terraform_arguments: ${{ parameters.terraform_arguments }}
      retry_attempt_count: ${{ parameters.retry_attempt_count }}
      credential_type: ${{ parameters.credential_type }}
