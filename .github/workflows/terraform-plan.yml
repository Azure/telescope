name: Terraform Plan

on:
  pull_request:

env:
  AWS_REGION: us-east-1
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    name: Setup test matrix scenarios
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup test matrix scenarios
        id: setup-matrix-scenarios
        run: |
           matrix=$(find $GITHUB_WORKSPACE/scenarios/ -name "azure.json" -o -name "aws.json" | awk -F'/' '{gsub(".json", "", $11); print "{\"cloud\": \"" $11 "\", \"scenario_type\": \"" $8 "\", \"scenario_name\": \"" $9 "\"},"}' | sort | uniq | sed 's/,$/,/')
           matrix="${matrix//$'\n'/''}"
           echo "matrix_combinations={\"include\": [${matrix%?}]}" >> "$GITHUB_OUTPUT"
    outputs:
        matrix-combinations: ${{ steps.setup-matrix-scenarios.outputs.matrix_combinations }}

  Terraform-unit-testing:
    permissions: read-all
    needs: setup-matrix
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    runs-on: ubuntu-latest
    name: ${{ matrix.cloud }}-${{ matrix.scenario_type }}-${{ matrix.scenario_name }}

    steps:
        - name: Get job id and set env
          run: |
            echo "RUN_ID=123456789" >> "$GITHUB_ENV"
            echo "TERRAFORM_INPUT_FILE=$GITHUB_WORKSPACE/scenarios/${{ matrix.scenario_type }}/${{ matrix.scenario_name }}/terraform-inputs/${{ matrix.cloud }}.tfvars" >> "$GITHUB_ENV"
            echo "TERRAFORM_TEST_INPUT_FILE=$GITHUB_WORKSPACE/scenarios/${{ matrix.scenario_type }}/${{ matrix.scenario_name }}/terraform-test-inputs/${{ matrix.cloud }}.json" >> "$GITHUB_ENV"
            echo "USER_DATA_PATH=$GITHUB_WORKSPACE/scenarios/${{ matrix.scenario_type }}/${{ matrix.scenario_name }}/bash-scripts" >> "$GITHUB_ENV"
            echo "TERRAFORM_MODULES_DIR=modules/terraform/${{ matrix.cloud }}" >> "$GITHUB_ENV"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Create JSON Input
          run: |
            INPUT_JSON_OBJECT=$(jq '. + { "user_data_path": "${{ env.USER_DATA_PATH }}" }' ${{ env.TERRAFORM_TEST_INPUT_FILE }})
            INPUT_JSON_STRING=$(echo $INPUT_JSON_OBJECT | jq -c .)
            echo "INPUT_JSON=$INPUT_JSON_STRING" >> "$GITHUB_ENV"

        - name: Azure login
          if: ${{ matrix.cloud == 'azure' }}
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: AWS login
          if: ${{ matrix.cloud == 'aws' }}
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.5.6

        - name: Terraform Init
          working-directory: ${{ env.TERRAFORM_MODULES_DIR }}
          run: terraform init

        - name: Terraform Plan
          working-directory: ${{ env.TERRAFORM_MODULES_DIR }}
          run: terraform plan -var-file "$TERRAFORM_INPUT_FILE" -var="json_input=$INPUT_JSON"
