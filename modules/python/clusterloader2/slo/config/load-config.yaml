name: load-config

{{$CILIUM_METRICS_ENABLED := DefaultParam .CL2_CILIUM_METRICS_ENABLED false}}

{{$groupName := DefaultParam .CL2_GROUP_NAME "service-discovery"}}
{{$operationTimeout := DefaultParam .CL2_OPERATION_TIMEOUT "15m"}}
{{$latencyPodCpu := DefaultParam .CL2_LATENCY_POD_CPU 10}}
{{$latencyPodMemory := DefaultParam .CL2_LATENCY_POD_MEMORY 50}}
{{$podStartupLatencyThreshold := DefaultParam .CL2_POD_STARTUP_LATENCY_THRESHOLD "15s"}}

# Config options for test parameters
{{$daemonsets := DefaultParam .CL2_NUM_OF_BIG_GROUPS 1}}
{{$repeats := DefaultParam .CL2_REPEATS 1}} # 1

{{$nodes := DefaultParam .CL2_NODES 500}}
{{$nodesPerNamespace := DefaultParam .CL2_NODES_PER_NAMESPACE 500}}
{{$namespaces := DivideInt $nodes $nodesPerNamespace}} # 1

{{$totalPods := MultiplyInt $namespaces $nodesPerNamespace $daemonsets}}
{{$podsPerNamespace := DivideInt $totalPods $namespaces}} 

{{$expectedIdentities := MultiplyInt 2 $daemonsets}}

# QPS
# We use RandomizedTimeLimitedLoad for load QPS.
# Specifically, we aim to create/delete LOAD_TEST_THROUGHPUT/DELETE_TEST_THROUGHPUT pods per second, on average.
# Operations make an independent choice about the time to start uniformly at random from the associated time period.
{{$LOAD_TEST_THROUGHPUT := DefaultParam .CL2_LOAD_TEST_THROUGHPUT 10}} #100
{{$DELETE_TEST_THROUGHPUT := DefaultParam .CL2_DELETE_TEST_THROUGHPUT $LOAD_TEST_THROUGHPUT}}
{{$saturationTime := DivideInt $totalPods $LOAD_TEST_THROUGHPUT}}
{{$deletionTime := DivideInt $totalPods $DELETE_TEST_THROUGHPUT}}


{{$ds_surge := DefaultParam .CL2_DS_SURGE $nodes}}

namespace:
  deleteStaleNamespaces: true
  deleteAutomanagedNamespaces: true
  enableExistingNamespaces: false

tuningSets:
  - name: Sequence
    parallelismLimitedLoad:
      parallelismLimit: 1
  - name: RandomizedSaturationTimeLimited
    RandomizedTimeLimitedLoad:
      timeLimit: {{$saturationTime}}s
  - name: RandomizedDeletionTimeLimited
    RandomizedTimeLimitedLoad:
      timeLimit: {{$deletionTime}}s

steps:
  - name: Log - schedulableNodes={{$nodes}}, daemonsets={{$daemonsets}}, expectedIdentities={{$expectedIdentities}}
    measurements:
    - Identifier: Dummy
      Method: Sleep
      Params:
        action: start
        duration: 1ms

  - module:
      path: /modules/measurements.yaml
      params:
        action: start
        group: {{$groupName}}

{{if $CILIUM_METRICS_ENABLED}}
  - module:
      path: /modules/cilium-measurements.yaml
      params:
        action: start
{{end}}

# Create Namespace
- name: Setup namespace
  phases:
  - replicasPerNamespace: 1
    tuningSet: Sequence
    objectBundle:
    - basename: my-namespace
      objectTemplatePath: namespace_template.yaml
      templateFillMap:
        Name: my-namespace
        Type: start

# - name: Sleep
#   measurements:
#   - Identifier: Dummy
#     Method: Sleep
#     Params:
#       action: start
#       duration: 1m

# Create Daemonsets
  # - module:
  #     path: /modules/reconcile-objects.yaml
  #     params:
  #       actionName: "create"
  #       namespaces: {{$namespaces}}
  #       tuningSet: RandomizedSaturationTimeLimited
  #       operationTimeout: {{$operationTimeout}}
  #       CpuRequest: {{$latencyPodCpu}}m
  #       MemoryRequest: {{$latencyPodMemory}}M
  #       Group: {{$groupName}}
  #       daemonsets: {{$daemonsets}}
  #       namespaceType: create
  #       surge: {{$ds_surge}}
  #       replicas: {{$nodes}}

# Relabel Namespace
  # - name: Setup namespace
  #   phases:
  #   - replicasPerNamespace: 1
  #     tuningSet: Sequence
  #     objectBundle:
  #     - basename: my-namespace
  #       objectTemplatePath: namespace_template.yaml
  #       templateFillMap:
  #         Name: my-namespace
  #         Type: restart

# Sleep 5 minutes
  # - name: Sleep
  #   measurements:
  #   - Identifier: Dummy
  #     Method: Sleep
  #     Params:
  #       action: start
  #       duration: 5m

# Delete Daemonsets
  # - module:
  #     path: /modules/reconcile-objects.yaml
  #     params:
  #       actionName: "delete"
  #       namespaces: 0
  #       tuningSet: RandomizedDeletionTimeLimited
  #       operationTimeout: {{$operationTimeout}}
  #       namespaceType: restart
  #       Group: {{$groupName}}
  #       daemonsets: 0
  #       surge: {{$ds_surge}}
  #       replicas: 0

{{if $CILIUM_METRICS_ENABLED}}
  - module:
      path: /modules/cilium-measurements.yaml
      params:
        action: gather
{{end}}

  - module:
      path: /modules/measurements.yaml
      params:
        action: gather
        group: {{$groupName}}
