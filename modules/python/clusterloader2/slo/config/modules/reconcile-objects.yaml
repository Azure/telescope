## Input params
# Valid actions: "create", "delete"
{{$actionName := printf "%s objects" .actionName}}
{{$namespaces := .namespaces}}
{{$tuningSet := .tuningSet}}

# flag to wait for pods to be deleted
{{$waitToDelete := DefaultParam .waitForPods true}}

# Derivative variables
{{$is_deleting := (eq .actionName "delete")}}
{{$operationTimeout := .operationTimeout}}

# Deployments
{{$bigDeploymentSize := .bigDeploymentSize}}
{{$bigDeploymentsPerNamespace := .bigDeploymentsPerNamespace}}

# Mugesh - Set Default values to 0 if not provided
{{$smallDeploymentSize := DefaultParam .smallDeploymentSize 0}}
{{$smallDeploymentsPerNamespace := DefaultParam .smallDeploymentsPerNamespace 0}}

steps:
- name: Starting measurement for '{{$actionName}}'
  measurements:
  - Method: WaitForControlledPodsRunning
    Instances:
    - Identifier: WaitForRunningDeployments
      Params:
        apiVersion: apps/v1
        kind: Deployment
    Params:
      action: start
      checkIfPodsAreUpdated: true
      labelSelector: group = {{.Group}}
      operationTimeout: {{$operationTimeout}}
      apiVersion: apps/v1

- name: {{$actionName}}
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$bigDeploymentsPerNamespace}}
    tuningSet: {{$tuningSet}}
    objectBundle:
    - basename: big-deployment
      objectTemplatePath: deployment_template.yaml
      templateFillMap:
        Replicas: {{$bigDeploymentSize}}
        SvcName: big-service
        Group: {{.Group}}
        deploymentLabel: {{.deploymentLabel}}
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$smallDeploymentsPerNamespace}}
    tuningSet: {{$tuningSet}}
    objectBundle:
    - basename: small-deployment
      objectTemplatePath: deployment_template.yaml
      templateFillMap:
        Replicas: {{$smallDeploymentSize}}
        SvcName: small-service
        Group: {{.Group}}
        deploymentLabel: {{.deploymentLabel}}
- name: test-get-nodes
    repetitions: 1
    steps:
      - name: get-nodes
        custom:
          apiCall:
            method: GET
            resource: /api/v1/nodes
            count: 100
            interval: 1s
  - name: test-get-pods
    repetitions: 1
    steps:
      - name: get-pods
        custom:
          apiCall:
            method: GET
            resource: /api/v1/namespaces/default/pods
            count: 100
            interval: 1s
# Mugesh - Wait for pods to be deleted
{{if $waitToDelete}}
- name: Waiting for '{{$actionName}}' to be completed
  measurements:
  - Method: WaitForControlledPodsRunning
    Instances:
    - Identifier: WaitForRunningDeployments
    Params:
      action: gather
      refreshInterval: 15s
{{end}}