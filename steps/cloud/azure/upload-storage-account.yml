parameters:
  source_file_name: $(TEST_RESULTS_FILE)
  destination_file_name: $(RUN_ID).json
  subfolder: $(SCENARIO_NAME)/$(SCENARIO_VERSION)
  container_name: $(SCENARIO_TYPE)
  credential_type: string
  cloud: string

steps:
- ${{ if or(ne(parameters.cloud, 'azure'), eq(parameters.credential_type, 'service_connection')) }}:
  - template: /steps/cloud/azure/login.yml
    parameters:
      region: eastus
      credential_type: ${{ parameters.credential_type }}

- script: |
    telescope_metadata=$(cat "$TELESCOPE_METADATA_FILE" | jq -c '.')
    results=$(cat "$TEST_RESULTS_FILE" | jq -c '.')
    results_with_metadata=$( jq -n \
      --arg metadata "$telescope_metadata" \
      --arg results "$results" \
      '{
        metadata: $metadata,
        results: $results
      }')
    echo "$results_with_metadata" > $TEST_RESULTS_DIR/$(RUN_ID).json
    echo "##vso[task.setvariable variable=TELESCOPE_RESULTS_FILE]$TEST_RESULTS_DIR/$(RUN_ID).json"
  displayName: 'Update results with metadata'
  env:
    TEST_RESULTS_FILE: ${{ parameters.source_file_name }}

- bash: |
    set -eux

    if [ -f "$SOURCE_FILE_NAME" ]; then
      az storage blob upload \
      --file $SOURCE_FILE_NAME \
      --name ${SUBFOLDER}/${DESTINATION_FILE_NAME} \
      --account-name $AZURE_STORAGE_ACCOUNT_NAME \
      --container-name $CONTAINER_NAME \
      --auth-mode login
    else
      echo "File $SOURCE_FILE_NAME does not exist."
    fi
  displayName: "Upload Result"
  env:
    SOURCE_FILE_NAME: $(TELESCOPE_RESULTS_FILE)
    DESTINATION_FILE_NAME: ${{ parameters.destination_file_name }}
    SUBFOLDER: ${{ parameters.subfolder }}
    CONTAINER_NAME: ${{ parameters.container_name}}
    AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
