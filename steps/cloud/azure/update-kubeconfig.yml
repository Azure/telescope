parameters:
- name: region
  type: string
- name: role
  type: string
- name: alias
  type: string
  default: ""

steps:
- script: |
    set -euo pipefail
    set -x

    region=${{ parameters.region }}

    aks_name=$(az resource list --resource-type Microsoft.ContainerService/managedClusters --location $region \
      --query "[?(tags.run_id == '${RUN_ID}' && tags.role == '$ROLE')].name" --output tsv)

    aks_rg=$(az resource list --resource-type Microsoft.ContainerService/managedClusters --location $region \
      --query "[?(tags.run_id == '${RUN_ID}' && tags.role == '$ROLE')].resourceGroup" --output tsv)

    if [ -z "$aks_name" ]; then
        echo "##vso[task.logissue type=error;] No AKS instance with role $ROLE and tag $RUN_ID found in region $region."
        exit 1
    fi

    az aks get-credentials -n $aks_name -g $aks_rg ${ALIAS:+--context $ALIAS}
  env:
    ROLE: ${{ parameters.role }}
    ALIAS: ${{ parameters.alias }}
  displayName: "Update kubeconfig"
