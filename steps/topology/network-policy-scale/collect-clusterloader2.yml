parameters:
- name: cloud
  type: string
  default: ''
- name: engine_input
  type: object
  default: {}
- name: regions
  type: object
  default: {}

steps:
- template: /steps/engine/clusterloader2/network-policy-scale/collect.yml
  parameters:
    cloud: ${{ parameters.cloud }}
    engine_input: ${{ parameters.engine_input }}
    region: ${{ parameters.regions[0] }}

- script: |
    run_id=$(Build.BuildId)-$(System.JobId)
    echo "Run ID: $run_id"
    echo "##vso[task.setvariable variable=RUN_ID]$run_id"
  displayName: "Set unique Run ID before publish"

- script: |
    # Append timestamp to the test results file if the file exists
    set -eux
    if [ -f "$(TEST_RESULTS_FILE)" ]; then
      jq --arg start_timestamp $START \
      -c '. + {start_timestamp: $start_timestamp}' $(TEST_RESULTS_FILE) > temp-$START.json \
      && mv temp-$START.json $(TEST_RESULTS_FILE)
    else
      echo  "##vso[task.logissue type=warning;]File $(TEST_RESULTS_FILE) does not exist."
    fi
  displayName: "Add timestamp to Test Results"
  condition: always()
