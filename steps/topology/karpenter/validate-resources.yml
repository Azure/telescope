parameters:
- name: cloud
  type: string
- name: engine
  type: string
- name: regions
  type: object

steps:
- ${{ if eq(variables['SCENARIO_NAME'], 'nap')}}:
  - template: /steps/cloud/${{ parameters.cloud }}/update-kubeconfig.yml
    parameters:
      role: nap
      region: ${{ parameters.regions[0] }}

- ${{ if eq(variables['SCENARIO_NAME'], 'cluster-automatic')}}:
  - template: /steps/cloud/${{ parameters.cloud }}/update-kubeconfig.yml
    parameters:
      role: automatic
      region: ${{ parameters.regions[0] }}
  - template: /steps/cloud/azure/install-kubelogin.yml
    parameters:
      cloud: ${{ parameters.cloud }}
      region: ${{ parameters.regions[0] }}

- bash: |
    set -euo pipefail
    set -x
    kubectl apply -f $KARPENTER_NODEPOOL_FILE

    # Patch the On-Demand NodePool
    kubectl patch nodepool default --type='json' -p="[{'op': 'replace', 'path': '/spec/template/spec/requirements/2/values', 'value': ['$VM_SIZE']}]"

    # Patch the Spot NodePool
    kubectl patch nodepool spot --type='json' -p="[{'op': 'replace', 'path': '/spec/template/spec/requirements/2/values', 'value': ['$VM_SIZE']}]"

    kubectl get nodepool default -o yaml
    kubectl get nodepool spot -o yaml
  env:
    CLOUD: ${{ parameters.cloud }}
    KARPENTER_NODEPOOL_FILE: $(Pipeline.Workspace)/s/scenarios/$(SCENARIO_TYPE)/$(SCENARIO_NAME)/kubernetes/karpenter_nodepool.${{ parameters.cloud }}.yml
  displayName: "Validate Karpenter setup"
