parameters:
- name: kwok_repo
  type: string
  default: 'kubernetes-sigs/kwok'
- name: kwok_release
  type: string
  default: 'v0.6.1'

steps:
  - script: |
      kubectl apply -f "https://github.com/${KWOK_REPO}/releases/download/${KWOK_RELEASE}/kwok.yaml"
      kubectl apply -f "https://github.com/${KWOK_REPO}/releases/download/${KWOK_RELEASE}/stage-fast.yaml"
      for ((i=0; i<KWOK_NODES; i++)); do
        kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Node
          metadata:
            annotations:
              node.alpha.kubernetes.io/ttl: "0"
              kwok.x-k8s.io/node: fake
            labels:
              beta.kubernetes.io/arch: amd64
              beta.kubernetes.io/os: linux
              kubernetes.io/arch: amd64
              kubernetes.io/hostname: kwok-node-$i
              kubernetes.io/os: linux
              kubernetes.io/role: agent
              node-role.kubernetes.io/agent: ""
              type: kwok
            name: kwok-node-$i
          spec:
            taints: # Avoid scheduling actual running pods to fake Node
            - effect: NoSchedule
              key: kwok.x-k8s.io/node
              value: fake
          status:
            allocatable:
              cpu: 32
              memory: 128Gi
              pods: 110
            capacity:
              cpu: 32
              memory: 128Gi
              pods: 110
            nodeInfo:
              architecture: amd64
              bootID: ""
              containerRuntimeVersion: ""
              kernelVersion: ""
              kubeProxyVersion: fake
              kubeletVersion: fake
              machineID: ""
              operatingSystem: linux
              osImage: ""
              systemUUID: ""
            phase: Running
      EOF
        done
    displayName: 'Create virtual nodes using Kwok'
    env:
      KWOK_REPO: ${{ parameters.kwok_repo }}
      KWOK_RELEASE: ${{ parameters.kwok_release }}