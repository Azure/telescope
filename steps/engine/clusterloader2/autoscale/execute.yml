parameters:
- name: cloud
  type: string
  default: ''
- name: engine_input
  type: object
  default: {}
- name: region
  type: string

steps:
- script: |
    set -eo pipefail

    PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE override \
      --cpu_per_node=$CPU_PER_NODE \
      --node_count=$NODE_COUNT \
      --pod_count=$POD_COUNT \
      --scale_up_timeout=$SCALE_UP_TIMEOUT \
      --scale_down_timeout=$SCALE_DOWN_TIMEOUT \
      --loop_count=$LOOP_COUNT \
      --node_label_selector="$NODE_LABEL_SELECTOR" \
      --node_selector="$NODE_SELECTOR" \
      --cl2_override_file=${CL2_CONFIG_DIR}/overrides.yaml \
      --warmup_deployment=${WARMUP_DEPLOYMENT:-false} \
      --cl2_config_dir=${CL2_CONFIG_DIR}
    PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE execute \
      --cl2_image=${CL2_IMAGE} \
      --cl2_config_dir=${CL2_CONFIG_DIR} \
      --cl2_report_dir=$CL2_REPORT_DIR \
      --kubeconfig=${HOME}/.kube/config \
      --provider=$CLOUD
  workingDirectory: modules/python
  env:
    ${{ if eq(parameters.cloud, 'azure') }}:
      CLOUD: aks
    ${{ else }}:
      CLOUD: ${{ parameters.cloud }}
    REGION: ${{ parameters.region }}
    PYTHON_SCRIPT_FILE: $(Pipeline.Workspace)/s/modules/python/clusterloader2/autoscale/autoscale.py
    CL2_IMAGE: ${{ parameters.engine_input.image }}
    CL2_CONFIG_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/autoscale/config
    CL2_REPORT_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/autoscale/results
  displayName: "Run Benchmark"
