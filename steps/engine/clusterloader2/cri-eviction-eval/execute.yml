parameters:
  - name: cloud
    type: string
    default: ""
  - name: engine
    type: object
  - name: region
    type: string
  - name: topology
    type: string
  - name: node_count
    type: string
  - name: max_pods
    type: string
  - name: load
    type: object
  - name: operation_timeout
    type: string
  - name: eviction_hard_memory
    type: string
    default: "100Mi"

steps:
  - script: |
      set -eo pipefail
      set -x
      
      echo "Running eviction benchmark"
      
      echo "Python script file:   $PYTHON_SCRIPT_FILE"
      echo "Node label:           $NODE_LABEL"
      echo "CL2 config dir:       $CL2_CONFIG_DIR"
      echo "CL2 report dir:       $CL2_REPORT_DIR"
      echo "Cloud:                $CLOUD"
      echo "Kubeconfig:           ${HOME}/.kube/config"
      
      echo "Generating clusterloader2 override config"
      echo "Node count:           $NODE_COUNT"
      echo "Max pods:             $MAX_PODS"
      echo "Operation timeout:    $OPERATION_TIMEOUT"
      echo "Load type:            $LOAD_TYPE"
      echo "Load factor:          $LOAD_FACTOR"
      echo "Load duration:        $LOAD_DURATION"
      
      # do not break line, does not work with multiline
      PYTHONPATH=$PYTHONPATH:$(pwd) python3 "$PYTHON_SCRIPT_FILE" override \
        "$NODE_LABEL" "$CL2_CONFIG_DIR" "$CL2_REPORT_DIR" "$CLOUD" "${HOME}/.kube/config" \
        "$NODE_COUNT" "$MAX_PODS" "$OPERATION_TIMEOUT" "$LOAD_TYPE" "$LOAD_FACTOR" "$LOAD_DURATION" 
      
      echo "Running clusterloader2 benchmark"
      echo "CL2 image:            $CL2_IMAGE"
      echo "Eviction hard memory: $EVICTION_THRESHOLD_MEM"
      
      PYTHONPATH=$PYTHONPATH:$(pwd) python3 "$PYTHON_SCRIPT_FILE" execute \
        "$NODE_LABEL" "$CL2_CONFIG_DIR" "$CL2_REPORT_DIR" "$CLOUD" "${HOME}/.kube/config" \
        "$CL2_IMAGE" "$EVICTION_THRESHOLD_MEM"

    workingDirectory: modules/python/clusterloader2
    env:
      ${{ if eq(parameters.cloud, 'azure') }}:
        CLOUD: aks
      ${{ else }}:
        CLOUD: ${{ parameters.cloud }}
      NODE_COUNT: ${{ parameters.node_count }}
      NODE_LABEL: ${{ parameters.topology }}
      EVICTION_THRESHOLD_MEM: ${{ parameters.eviction_hard_memory }}
      MAX_PODS: ${{ parameters.max_pods }}
      LOAD_TYPE: ${{ parameters.load.type }}
      LOAD_FACTOR: ${{ parameters.load.factor }}
      LOAD_DURATION: ${{ parameters.load.duration }}
      OPERATION_TIMEOUT: ${{ parameters.operation_timeout }}
      PYTHON_SCRIPT_FILE: $(Pipeline.Workspace)/s/modules/python/clusterloader2/cri_eviction_eval/cri_eviction_eval.py
      CL2_IMAGE: ${{ parameters.engine.image }}
      CL2_CONFIG_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/cri_eviction_eval/config
      CL2_REPORT_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/cri_eviction_eval/results
    displayName: "Run Eviction threshold (Hard) Benchmark"
