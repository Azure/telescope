parameters:
  - name: cloud
    type: string
    default: ""
  - name: engine_input
    type: object
  - name: region
    type: string
  - name: topology
    type: string
  - name: node_count
    type: string
  - name: max_pods
    type: string
  - name: load_type
    type: string
  - name: operation_timeout
    type: string
  - name: eviction_hard_memory
    type: string
    default: "100Mi"

steps:
  - script: |
      set -eo pipefail
      echo "Running eviction benchmark"
      echo "Running $PYTHON_SCRIPT_FILE with config $CL2_CONFIG_DIR. " 
      
      PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE override \
      $NODE_LABEL $CL2_CONFIG_DIR $CL2_REPORT_DIR $CLOUD ${HOME}/.kube/config \ 
      $NODE_COUNT $MAX_PODS $OPERATION_TIMEOUT $LOAD_TYPE 

      PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE execute \
      $NODE_LABEL $CL2_CONFIG_DIR $CL2_REPORT_DIR $CLOUD ${HOME}/.kube/config \ 
      $CL2_IMAGE $EVICTION_THRESHOLD_MEM
    workingDirectory: modules/python/clusterloader2
    env:
      ${{ if eq(parameters.cloud, 'azure') }}:
        CLOUD: aks
      ${{ else }}:
        CLOUD: ${{ parameters.cloud }}
      REGION: ${{ parameters.region }}
      NODE_COUNT: ${{ parameters.node_count }}
      NODE_LABEL: ${{ parameters.topology }}
      EVICTION_THRESHOLD_MEM: ${{ parameters.eviction_hard_memory }}
      MAX_PODS: ${{ parameters.max_pods }}
      LOAD_TYPE: ${{ parameters.load_type }}
      OPERATION_TIMEOUT: ${{ parameters.operation_timeout }}
      PYTHON_SCRIPT_FILE: $(Pipeline.Workspace)/s/modules/python/clusterloader2/cri-eviction-eval/cri_eviction_eval.py
      CL2_IMAGE: ${{ parameters.engine_input.image }}
      CL2_CONFIG_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/cri-eviction-eval/config
      CL2_REPORT_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/cri-eviction-eval/results
    displayName: "Run Eviction threshold (Hard) Benchmark"
