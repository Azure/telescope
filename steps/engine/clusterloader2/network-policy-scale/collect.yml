parameters:
- name: cloud
  type: string
  default: ''
- name: engine_input
  type: object
  default: {}
- name: region
  type: string

steps:
- template: /steps/cloud/${{ parameters.cloud }}/collect-cloud-info.yml
  parameters:
    region: ${{ parameters.region }}
- script: |
    set -eo pipefail
    echo "PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE collect \
      --node_count $NODE_COUNT \
      --pod_count "$(( ($CLIENTS_PER_GROUP + $SERVERS_PER_GROUP) * $GROUPS ))" \
      --cl2_report_dir $CL2_REPORT_DIR\
      --cloud_info "$CLOUD_INFO" \
      --run_id $RUN_ID \
      --run_url $RUN_URL \
      --result_file $TEST_RESULTS_FILE \
      --test_type $NETWORKPOLICY_TYPE"
    PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE collect \
      --node_count $NODE_COUNT \
      --pod_count "$(( ($CLIENTS_PER_GROUP + $SERVERS_PER_GROUP) * $GROUPS ))" \
      --cl2_report_dir $CL2_REPORT_DIR\
      --cloud_info "$CLOUD_INFO" \
      --run_id $RUN_ID \
      --run_url $RUN_URL \
      --result_file $TEST_RESULTS_FILE \
      --test_type $NETWORKPOLICY_TYPE
  workingDirectory: modules/python
  env:
    CLOUD: ${{ parameters.cloud }}
    RUN_URL: $(RUN_URL)
    PYTHON_SCRIPT_FILE: $(Pipeline.Workspace)/s/modules/python/clusterloader2/slo/network-policy-scale.py
    CL2_REPORT_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/slo/network-policy-scale-report
  displayName: "Collect Results"
