parameters:
  - name: cloud
    type: string
    default: ""
  - name: engine_input
    type: object
    default: {}
  - name: region
    type: string

steps:
  - script: |
      echo "Set the start time for test execution"
      startTimestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
      echo "Start: $startTimestamp"
      echo "##vso[task.setvariable variable=SLO_START_TIME]$startTimestamp"
    displayName: set up timestamp variable

  - script: |
      set -eo pipefail

      # configure
      echo "PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE configure --number_of_groups $GROUPS --clients_per_group $CLIENTS_PER_GROUP --servers_per_group $SERVERS_PER_GROUP --workers_per_client $WORKERS_PER_CLIENT --netpol_type $NETWORKPOLICY_TYPE --test_duration_secs $TEST_RUN_DURATION_SECS --provider $CLOUD --cilium_enabled $CILIUM_ENABLED --cilium_envoy_enabled $CILIUM_ENVOY_ENABLED --cl2_override_file ${CL2_CONFIG_DIR}/overrides.yaml"
      PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE configure \
        --number_of_groups $GROUPS \
        --clients_per_group $CLIENTS_PER_GROUP \
        --servers_per_group $SERVERS_PER_GROUP \
        --workers_per_client $WORKERS_PER_CLIENT \
        --netpol_type $NETWORKPOLICY_TYPE \
        --test_duration_secs $TEST_RUN_DURATION_SECS \
        --provider $CLOUD \
        --cilium_enabled $CILIUM_ENABLED \
        --cilium_envoy_enabled $CILIUM_ENVOY_ENABLED \
        --cl2_override_file ${CL2_CONFIG_DIR}/overrides.yaml

      # execute
      echo "PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE execute --cl2_image ${CL2_IMAGE} --cl2_config_dir ${CL2_CONFIG_DIR} --cl2_report_dir $CL2_REPORT_DIR --cl2_config_file $CL2_CONFIG_FILE --kubeconfig ${HOME}/.kube/config --provider $CLOUD"
      PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE execute \
        --cl2_image ${CL2_IMAGE} \
        --cl2_config_dir ${CL2_CONFIG_DIR} \
        --cl2_report_dir $CL2_REPORT_DIR \
        --cl2_config_file $CL2_CONFIG_FILE \
        --kubeconfig ${HOME}/.kube/config \
        --provider $CLOUD
    workingDirectory: modules/python
    env:
      ${{ if eq(parameters.cloud, 'azure') }}:
        CLOUD: aks
      ${{ else }}:
        CLOUD: ${{ parameters.cloud }}
      REGION: ${{ parameters.region }}
      PYTHON_SCRIPT_FILE: $(Pipeline.Workspace)/s/modules/python/clusterloader2/slo/network-policy-scale.py
      CL2_IMAGE: ${{ parameters.engine_input.image }}
      CL2_CONFIG_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/slo/config
      CL2_REPORT_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/slo/network-policy-scale-report
    displayName: "Run Benchmark"
