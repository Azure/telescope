parameters:
  - name: cloud
    type: string
    default: ""
  - name: engine_input
    type: object
    default: {}
  - name: region
    type: string
  - name: install_retina
    type: boolean
    default: false
  - name: repository
    type: string
    default: ""
  - name: makeargs
    type: string
    default: ""
  - name: ref
    type: string
    default: "main"

steps:
  - script: |
      echo "Set the start time for test execution"
      startTimestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
      echo "Start: $startTimestamp"
      echo "##vso[task.setvariable variable=START_TIME]$startTimestamp"
    displayName: set up timestamp variable

  - ${{ if parameters.install_retina }}:
    - script: |
        git clone http://github.com/microsoft/retina.git
        git checkout ${{ parameters.ref }}
      displayName: Clone Retina OSS Repo

    - script: |
        cd retina
        ls
        echo "Install Retina OSS Standard Basic"
        make ${{ parameters.makeargs }}
      displayName: Install Retina OSS Standard Basic

  - script: |
      set -eo pipefail

      PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE configure \
        ${CPU_PER_NODE:-0} ${NODE_COUNT:-0} ${NODE_PER_STEP:-0} ${MAX_PODS:-0} \
        ${REPEATS:-0} ${SCALE_TIMEOUT:-0} ${CLOUD:-0} ${CILIUM_ENABLED:-False} ${SCRAPE_CONTAINERD:-False} \
        ${SERVICE_TEST:-False} ${CNP_TEST:-False} ${CCNP_TEST:-False} ${NUM_CNPS:-0} ${NUM_CCNPS:-0} ${DUALSTACK:-False} ${CL2_CONFIG_DIR}/overrides.yaml
      PYTHONPATH=$PYTHONPATH:$(pwd) python3 $PYTHON_SCRIPT_FILE execute \
        ${CL2_IMAGE} ${CL2_CONFIG_DIR} $CL2_REPORT_DIR $CL2_CONFIG_FILE \
        ${HOME}/.kube/config $CLOUD ${SCRAPE_CONTAINERD:-False}
    workingDirectory: modules/python/clusterloader2
    env:
      ${{ if eq(parameters.cloud, 'azure') }}:
        CLOUD: aks
      ${{ else }}:
        CLOUD: ${{ parameters.cloud }}
      REGION: ${{ parameters.region }}
      PYTHON_SCRIPT_FILE: $(Pipeline.Workspace)/s/modules/python/clusterloader2/scale/scale.py
      CL2_IMAGE: ${{ parameters.engine_input.image }}
      CL2_CONFIG_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/scale/config
      CL2_REPORT_DIR: $(Pipeline.Workspace)/s/modules/python/clusterloader2/scale/results
    displayName: "Run Benchmark"
  - script: |
      make uninstall
    displayName: Uninstall Helm Chart

