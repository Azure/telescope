parameters:
- name: cloud
  type: string
  default: ''
- name: engine_input
  type: object
  default: {}
- name: storage_login_credential_type
  type: string
  default: ''
- name: flowcontrol
  type: string
  default: "workload-low:1000"
- name: extra_benchmark_subcmd_args
  type: string
  default: ""
- name: region
  type: string

steps:
- template: /steps/cloud/${{ parameters.cloud }}/collect-cloud-info.yml
  parameters:
    region: ${{ parameters.region }}

- ${{ if or(ne(parameters.cloud, 'azure'), eq(parameters.storage_login_credential_type, 'service_connection')) }}:
  - template: /steps/cloud/azure/login.yml
    parameters:
      region: eastus
      credential_type: ${{ parameters.storage_login_credential_type }}

- script: |
    set -euo pipefail
    set -x

    errors_number=$(jq -r '.result.errors | length' ${TEST_RESULTS_DIR}/tmp_results.json)
    error_rate_too_high=$(jq -r '(1 - .result.total / (.loadSpec.count * .loadSpec.loadProfile.spec.total)) > 0.1' ${TEST_RESULTS_DIR}/tmp_results.json)
    if [[ "${errors_number}" != "0" && "${error_rate_too_high}" == "true" ]]; then

      cat ${TEST_RESULTS_DIR}/tmp_results.json \
        | jq -cr ".result.errors | map(. + {runID: \"$RUN_ID\", cloud: \"$CLOUD_NAME\"}) | .[]" > ${TEST_RESULTS_DIR}/errors_raw_data.json

      cat $TEST_RESULTS_DIR/errors_raw_data.json

      az storage blob upload \
        --account-name ${ERRORRAWDATA_STORAGE_ACCOUNT_NAME} \
        --container-name ${ERRORRAWDATA_STORAGE_CONTAINER_NAME} \
        --name ${ERRORRAWDATA_STORAGE_CONTAINER_FILENAME} \
        --file ${TEST_RESULTS_DIR}/errors_raw_data.json \
        --auth-mode login
    fi

    cat ${TEST_RESULTS_DIR}/tmp_results.json \
      | jq 'del(.result.errors)' \
      | jq -c ".info += { flowcontrol: \"$FLOWCONTROL\", subcmdArgs: \"$BENCHMARK_SUBCMD_ARGS\", extraArgs: \"$EXTRA_BENCHMARK_SUBCMD_ARGS\" }" \
      | jq -c ". += { timestamp: $(date -u +\"%Y-%m-%dT%H:%M:%SZ\") }" \
      | jq -c ". += { runID: \"$RUN_ID\", runURL: \"$RUN_URL\", cloud: \"$CLOUD_NAME\" }" > "${TEST_RESULTS_FILE}"

    cat $TEST_RESULTS_FILE | jq .
  env:
    CLOUD_NAME: ${{ parameters.cloud }}
    BENCHMARK_SUBCMD_ARGS: ${{ parameters.engine_input.benchmark_subcmd_args }}
    EXTRA_BENCHMARK_SUBCMD_ARGS: ${{ parameters.extra_benchmark_subcmd_args }}
    FLOWCONTROL: ${{ parameters.flowcontrol }}
    ERRORRAWDATA_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
    ERRORRAWDATA_STORAGE_CONTAINER_NAME: $(SCENARIO_TYPE)
    ERRORRAWDATA_STORAGE_CONTAINER_FILENAME: $(SCENARIO_NAME)-errorrawdata/$(SCENARIO_VERSION)/$(RUN_ID).json
  displayName: "Collect Results"
