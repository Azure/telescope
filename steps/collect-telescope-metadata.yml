parameters:
- name: engine
  type: string
- name: topology
  type: string
- name: image
  type: string
- name: cloud
  type: string

steps:
- script: |
    telescope_metadata=$(jq -n \
      --arg run_id $RUN_ID \
      --arg run_url  $RUN_URL \
      --arg code_url  $CODE_URL \
      --arg reason $(Build.Reason) \
      --arg source_branch $(Build.SourceBranchName) \
      --arg requester "$(Build.RequestedFor)" \
      --arg scenario_name "$SCENARIO_NAME" \
      --arg scenario_type "$SCENARIO_TYPE" \
      --arg engine "$ENGINE" \
      --arg topology "$TOPOLOGY \
      --arg image "$IMAGE" \
      --arg cloud "$CLOUD" \
      '{
      run_id: $run_id,
      run_url: $run_url,
      code_url: $code_url,
      reason: $reason,
      source_branch: $source_branch,
      requester: $requester,
      scenario_name: $scenario_name,
      scenario_type: $scenario_type,
      engine: $engine,
      topology: $topology,
      image: $image,
      cloud: $cloud
      }')
    echo "Telescope Metadata: $telescope_metadata"
    echo "$telescope_metadata" > $TEST_RESULTS_DIR/telescope_metadata.json
    echo "##vso[task.setvariable variable=TELESCOPE_METADATA_FILE]$TEST_RESULTS_DIR/telescope_metadata.json"
  displayName: "Set Telescope Metadata"
  condition: always()
  env:
    ENGINE: ${{ parameters.engine }}
    TOPOLOGY: ${{ parameters.topology }}
    IMAGE: ${{ parameters.image }}
    CLOUD: ${{ parameters.cloud }}

- template: /steps/cloud/azure/upload-storage-account.yml
  parameters:
    source_file_name: $(TELESCOPE_METADATA_FILE)
    destination_file_name: telescope_metadata-$(RUN_ID).json
    subfolder: telescope-metadata
    credential_type: ${{ parameters.credential_type }}
    cloud: ${{ parameters.cloud }}
