parameters:
- name: cloud
  type: string
- name: region
  type: string
- name: test_modules_dir
  type: string
  default: ''
- name: run_id
  type: string
  default: ''
- name: retry_attempt_count
  type: number
  default: 3
- name: credential_type
  type: string
- name: ssh_key_enabled
  type: boolean

steps:
- script: |
    if [ -n "$RUN_ID" ]; then
      run_id=$RUN_ID
    else
      run_id=$(Build.BuildId)-$(System.JobId)
    fi
    echo "Run ID: $run_id"
    echo "##vso[task.setvariable variable=RUN_ID]$run_id"
  displayName: "Set Run ID"
  env:
    RUN_ID: ${{ parameters.run_id }}

- script: |
    run_url="$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=logs&j=$(System.JobId)"
    echo "Run URL: $run_url"
    echo "##vso[task.setvariable variable=RUN_URL]$run_url"

    code_url="$(Build.Repository.Uri)/commit/$(Build.SourceVersion)"
    echo "Code URL: $code_url"
    echo "##vso[task.setvariable variable=CODE_URL]$code_url"
  displayName: "Set Run URL & Code URL"

- script: |
    test_results_directory=$(Pipeline.Workspace)/s/$(RUN_ID)
    mkdir -p $test_results_directory
    echo "Test Results directory: $test_results_directory"
    echo "##vso[task.setvariable variable=TEST_RESULTS_DIR]$test_results_directory"

    test_results_file=$test_results_directory/results.json

    echo "Test Results file: $test_results_file"
    echo "##vso[task.setvariable variable=TEST_RESULTS_FILE]$test_results_file"
  displayName: 'Set Test Results Directory'

- script: |
    python3 --version && pip3 --version
    jq --version
  displayName: "Check Dependencies"

- script: |
    set -e
    if [ -f "$(Pipeline.Workspace)/s/modules/python/requirements.txt" ]; then
      pip3 install -r $(Pipeline.Workspace)/s/modules/python/requirements.txt
    fi
  displayName: "Install Python Dependencies"

- template: /steps/cloud/${{ parameters.cloud }}/login.yml
  parameters:
    region: ${{ parameters.region }}
    credential_type: ${{ parameters.credential_type }}

- script: |
    if [ -n "${TEST_MODULES_DIR}" ]; then
      test_modules_directory=$(Pipeline.Workspace)/s/${TEST_MODULES_DIR}
    else
      test_modules_directory=$(Pipeline.Workspace)/s/modules/bash
    fi
    echo "Script modules directory: $test_modules_directory"
    echo "##vso[task.setvariable variable=TEST_MODULES_DIR]$test_modules_directory"
  displayName: 'Set Script Module Directory'
  env:
    TEST_MODULES_DIR: ${{ parameters.test_modules_dir }}

- ${{ if eq(parameters.ssh_key_enabled, true) }}:
  - template: /steps/ssh/setup-key.yml
    parameters:
      cloud: ${{ parameters.cloud }}
