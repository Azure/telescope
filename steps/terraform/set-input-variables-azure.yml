parameters:
  - name: cloud
    type: string
  - name: regions
    type: object
  - name: input_variables
    type: object
    default: {}

steps:
  - script: |
      # Note: value set in matrix of a job will be available as environment variable with the same name using the syntax: $VARIABLE_NAME
      set -e

      if [[ "${DEBUG,,}" =~ "true" ]]; then
        set -x
      fi

      SYSTEM_NODE_POOL=${SYSTEM_NODE_POOL:-null}
      USER_NODE_POOL=${USER_NODE_POOL:-null}

      if [ -z "$(AKS_CLI_CUSTOM_HEADERS)" ]; then
        AKS_CUSTOM_HEADERS='[]'
      else
        IFS=', ' read -r -a aks_custom_headers_array <<< "$(AKS_CLI_CUSTOM_HEADERS)"
        AKS_CUSTOM_HEADERS=$(printf '%s\n' "${aks_custom_headers_array[@]}" | jq -R . | jq -s .)
      fi

      regional_config=$REGIONAL_CONFIG
      for REGION in $(echo "$REGIONS" | jq -r '.[]'); do
        if [ -z "$INPUT_VARIABLES" ]; then
          echo "Set input variables for region $REGION"
          INPUT_VARIABLES=$(jq -n \
                --arg run_id $RUN_ID \
                --arg region $REGION \
                --argjson  aks_custom_headers "$AKS_CUSTOM_HEADERS" \
                --argjson aks_cli_system_node_pool "$SYSTEM_NODE_POOL" \
                --argjson aks_cli_user_node_pool "$USER_NODE_POOL" \
                '{
                  run_id: $run_id,
                  region: $region,
                  aks_custom_headers: $aks_custom_headers,
                  aks_cli_system_node_pool: $aks_cli_system_node_pool,
                  aks_cli_user_node_pool: $aks_cli_user_node_pool
                }' | jq 'with_entries(select(.value != null and .value != ""))')
        fi
        input_variables_str=$(echo $INPUT_VARIABLES | jq -c .)
        echo "Input variables: $input_variables_str"
        regional_config=$(echo "$regional_config" | jq --arg region "$REGION" --arg input_variable "$input_variables_str" \
            '.[$region].TERRAFORM_INPUT_VARIABLES += $input_variable')
        echo "Regional config: $regional_config"
        INPUT_VARIABLES=""
      done
      regional_config_str=$(echo $regional_config | jq -c .)
      echo "Final regional config: $regional_config_str"
      echo "##vso[task.setvariable variable=TERRAFORM_REGIONAL_CONFIG]$regional_config_str"

    displayName: 'Set Terraform Input Variables'
    condition: ne(variables['SKIP_RESOURCE_MANAGEMENT'], 'true')
    env:
      CLOUD: ${{ parameters.cloud }}
      REGIONS: ${{ convertToJson(parameters.regions) }}
      RUN_ID: $(RUN_ID)
      INPUT_VARIABLES: ${{ convertToJson(parameters.input_variables) }}
      DEBUG: $(System.Debug)
