apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["m", "c"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2 # Amazon Linux 2
  role: "terraform-20240913143659874700000005" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: nap-10n100p-1726180247 # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: nap-10n100p-1726180247 # replace with your cluster name
  amiSelectorTerms:
    - id: "ami-06b7debe20143e10f"
    - id: "ami-0bfd5e3e4519f513c"
