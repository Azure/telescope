stages:
- stage: azeastus2
  displayName: azeastus2
  jobs:
  - job: setup
    displayName: Setup resources
    steps:
    - script: |-
        set -eu

        ssh_key_path="$(Pipeline.Workspace)/s/modules/terraform/azure/private_key.pem"
        public_key_path="$(Pipeline.Workspace)/s/modules/terraform/azure/private_key.pem.pub"
        ssh-keygen -t rsa -b 2048 -f $ssh_key_path -N "" > /dev/null 2>&1
        chmod 600 $ssh_key_path

        echo "SSH Key Path: $ssh_key_path"
        echo "##vso[task.setvariable variable=SSH_KEY_PATH;]$ssh_key_path"
        echo "Public Key Path: $public_key_path"
        echo "##vso[task.setvariable variable=SSH_PUBLIC_KEY_PATH;]$public_key_path"
      displayName: Generate SSH Key
    - script: |-
        set -eu

        echo "Get private key from key vault $AZURE_SSH_KEY_VAULT"
        az keyvault secret download --id $AZURE_SSH_KEY_VAULT --file $SSH_KEY_PATH
        chmod 600 $SSH_KEY_PATH
        cat $SSH_KEY_PATH
        echo "##vso[task.setvariable variable=SSH_KEY_PATH;]${SSH_KEY_PATH}"
      displayName: Download SSH Key
      condition: eq(variables['SKIP_RESOURCE_MANAGEMENT'], 'true')
  - job: validate
    displayName: Validate resources
    steps:
    - script: |-
        set -eu

        # Check if the private key file exists
        if [ ! -f "$SSH_KEY_PATH" ]; then
            echo "Error: SSH private key not found at $SSH_KEY_PATH"
            exit 1
        fi

        # Check if the private key has the correct permissions
        if [ "$(stat -c %a $SSH_KEY_PATH)" != "600" ]; then
            echo "Error: SSH private key permissions are not set to 600"
            exit 1
        fi

        # Check if the public key file exists
        if [ ! -f "$SSH_PUBLIC_KEY_PATH" ]; then
            echo "Error: SSH public key not found at $SSH_PUBLIC_KEY_PATH"
            exit 1
        fi

        echo "SSH key validation passed."
      displayName: Validate SSH Key
    dependsOn:
    - setup
  - job: run
    displayName: Run the benchmark
    steps: []
    dependsOn:
    - validate
  - job: tearDown
    displayName: Tear down resources
    steps:
    - script: |-
        set -eu
        echo "$SSH_KEY_PATH"

        # Check if the private key file exists
        if [ ! -f "$SSH_KEY_PATH" ]; then
            echo "Error: SSH private key not found at $SSH_KEY_PATH"
            exit 1
        fi

        # Check if the private key has the correct permissions
        if [ "$(stat -c %a $SSH_KEY_PATH)" != "600" ]; then
            echo "Error: SSH private key permissions are not set to 600"
            exit 1
        fi

        # Check if the public key file exists
        if [ ! -f "$SSH_PUBLIC_KEY_PATH" ]; then
            echo "Error: SSH public key not found at $SSH_PUBLIC_KEY_PATH"
            exit 1
        fi

        echo "SSH key validation passed."
      displayName: Delete SSH Keys
    dependsOn:
    - run
