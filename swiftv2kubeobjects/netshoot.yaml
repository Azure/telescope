apiVersion: v1
kind: Pod
metadata:
  labels:
    kubernetes.azure.com/pod-network: pn100
    kubernetes.azure.com/pod-network-instance: pni100
  name: netshootv1
  namespace: default
spec:
  containers:
  - image: nicolaka/netshoot:latest
    imagePullPolicy: Always
    name: netshootv1
    command: ["/bin/bash"]
    args: ["-c", "while true; do ping localhost; sleep 60;done"]  
    securityContext:
       privileged: true
    ports:
    - containerPort: 80
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-qs4bb
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeSelector:
    slo: "true"
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: "slo"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  - key: "DeletionCandidateOfClusterAutoscaler"
    operator: "Exists"
    effect: "PreferNoSchedule"
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-qs4bb
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
